__CONFIG _CP_OFF & _CPD_OFF & _DEBUG_OFF & _LVP_OFF & _WRT_OFF & _BODEN_OFF & _PWRTE_ON & _WDT_OFF & _HS_OSC

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                    DEFINIÇÃO DAS VARIÁVEIS                    *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTE BLOCO DE VARIÁVEIS ESTÁ LOCALIZADO LOGO NO INÍCIO DO BANCO 0

	CBLOCK	0X20			; POSIÇÃO INICIAL DA RAM

		TEMPO0		; TEMPORIZADORES P/ ROTINA DE DELAY DE 1ms
		TEMPO1				
		TEMPO2	
		TEMPO3
		TEMPO4
		TEMPO5			
		STATUS_TEMP  ; SALVA O REGISTRADOR STATUS ANTES DE ENTRAR NA INTERRUPÇÃO
		W_TEMP             ; SALVA O REGISTRADOR W ANTES DE ENTRAR NA INTERRUPÇÃO	
		FSRW		; SALVA O FSR ANTES DE SAIR DA INTERRUPÇÃO
		FSR_TEMP
		FILTRO01		; FILTROS PARA OS QUATRO BOTÕES DA IHM
		FILTRO02
		FILTRO11
		FILTRO12
		FILTRO21
		FILTRO22
		FILTRO31
		FILTRO32 		
		FLAGS			; FLAGS DIVERSOS
		FLAGS1				
    	              FLAGS2				
		FLAGS3			
		COMP_TEMP
		GUARDA_TEMP
		TEMPINS		; GUARDA O VALOR DO TEMPO DE INSERÇÃO
		TEMPREM		; GUARDA O VALOR DO TEMPO DE REMOÇÃO	
		ERRADAS		; GUARDA O NÚMERO DE INSERÇÕES ERRADAS
		TELAS			; GUARDA O NÚMERO DA TELA ATUAL DA IHM
		TEMP_W		; GUARDA O DADO RECEBIDO PELO CANAL DE COMUNICAÇÃO	 
		NUMH		; USADO NA ROTINA DE CONVERSÃO DO REGISTRADOR PARA O DISPLAY
		NUML			
		TENK			; GUARDA A DEZENA DE MILHAR CONVERTIDA PARA O LCD
		THOU			; GUARDA O MILHAR CONVERTIDA PARA O LCD
		HOUN			; GUARDA A CENTENA CONVERTIDA PARA O LCD
		TENS			; GUARDA A DEZENA CONVERTIDA PARA O LCD
		ONES			; GUARDA A UNIDADE CONVERTIDA PARA O LCD
		MILHAO			; GUARDA O MILHAO CONVERTIDA PARA O LCD
		CENTMIL		; GUARDA A CENTENA DE MILHAR CONVERTIDA PARA O LCD
		DEZEMIL		; GUARDA A DEZENA DE MILHAR CONVERTIDA PARA O LCD
		MILHAR			; GUARDA A O MILHAR CONVERTIDA PARA O LCD
		CENTENA		; GUARDA A CENTENA CONVERTIDA PARA O LCD
		DEZENA		; GUARDA A DEZENA CONVERTIDA PARA O LCD
		UNIDADE		; GUARDA A UNIDADE CONVERTIDA PARA O LCD
		PAL			; NÚMERO DE LEITURAS ERRADAS	
		VEL			; CONTROLE DE VELOCIDADE	
		
	ENDC






; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *  DEFINIÇÃO DAS VARIÁVEIS INTERNAS DO PIC     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  O ARQUIVO DE DEFINIÇÕES DO PIC UTILIZADO DEVE SER REFERENCIADO PARA QUE
;  OS NOMES DEFINIDOS PELA MICROCHIP POSSAM SER UTILIZADOS, SEM A NECESSIDADE
;  DE REDIGITAÇÃO.

	#INCLUDE <P16F877A.INC>			; MICROCONTROLADOR UTILIZADO


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *              DEFINIÇÃO DOS BANCOS DE RAM              *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  OS PSEUDOS-COMANDOS "BANK0" E "BANK1", AQUI DEFINIDOS, AJUDAM A COMUTAR
;  ENTRE OS BANCOS DE MEMÓRIA.

#DEFINE	BANK1	BSF	STATUS,RP0 		; SELECIONA BANK1 DA MEMORIA RAM
#DEFINE	BANK0	BCF	STATUS,RP0		; SELECIONA BANK0 DA MEMORIA RAM


#DEFINE	ST_BT0		FLAGS,0			;STATUS DO BOTÃO 0
#DEFINE	ST_BT1		FLAGS,1			;STATUS DO BOTÃO 1
#DEFINE	ST_BT2		FLAGS,2			;STATUS DO BOTÃO 2
#DEFINE	ST_BT3		FLAGS,3			;STATUS DO BOTÃO 3


#DEFINE	RXUSART	PORTC,7			; ENTRADA DE RX DA USART
#DEFINE	TXUSART	PORTC,6			; SAÍDA DE TX DA USART
#DEFINE 	CTS		PORTC,5			; RTS DO PIC
#DEFINE 	RTS		PORTC,4 		               ; CTS DO PIC
#DEFINE 	RESET  	              PORTC,0	  	  	; SINAL DE RESET DA LEITORA
									

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                                 SAÍDAS                                         *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  AS SAÍDAS DEVEM SER ASSOCIADAS A NOMES PARA FACILITAR A PROGRAMAÇÃO E
;  FUTURAS ALTERAÇÕES DO HARDWARE.

#DEFINE	DISPLAY		PORTD			; BARRAMENTO DE DADOS DO DISPLAY


#DEFINE	RS			PORTE,0	; INDICA P/ O DISPLAY UM DADO OU COMANDO
								; 1 -> DADO
								; 0 -> COMANDO

#DEFINE	ENABLE		PORTE,1		; SINAL DE ENABLE P/ DISPLAY
								; ATIVO NA BORDA DE DESCIDA


#DEFINE	STEPENABLE	PORTC,1			; SINAL DE ENABLE P/ STEPPER
								; 0 -> ATIVO 
								; 1 -> INATIVO

#DEFINE	DIRECTION	PORTC,2			; SINAL DE DIREÇÃO P/ STEPPER
						    		; 0 -> HORÁRIO
								; 1 -> ANTI-HORÁRIO

#DEFINE	STEPINPUT	PORTC,3			; SINAL DE ENTRADA P/ PASSO DO MOTOR
								; ATIVO NA BORDA DE DESCIDA

;******************************************************
;*           DEFINIÇÕES DE CONSTANTES        *
;******************************************************

T_FILTRO	EQU	.20	

;******************************************************
;*     DEFINICOES DOS BOTOES E LEDS       *
;******************************************************

#DEFINE BT_0 		PORTB,0			; BOTÃO 0
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO

#DEFINE BT_1 		PORTB,1			; BOTÃO 1
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO

#DEFINE BT_2 		PORTB,2			; BOTÃO 2
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO

#DEFINE BT_3 		PORTB,3			; BOTÃO 3
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO

#DEFINE BT_4 		PORTB,4			; BOTÃO 4
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO

#DEFINE BT_5 		PORTB,5			; BOTÃO 5
								; 1 -> LIBERADO
								; 0 -> PRESSIONADO


#DEFINE LED_0 		PORTA,0			; LED 0
								; 1 -> ACESO
								; 0 -> APAGADO

#DEFINE LED_1 		PORTA,1			; LED 1
								; 1 -> ACESO
								; 0 -> APAGADO

#DEFINE LED_2 		PORTA,2			; LED 2
								; 1 -> ACESO
								; 0 -> APAGADO

#DEFINE LED_3 		PORTA,3			; LED 3
								; 1 -> ACESO
								; 0 -> APAGADO

#DEFINE LED_4 		PORTA,5			; LED 4
								; 1 -> ACESO
								; 0 -> APAGADO
	
#DEFINE LED_5		PORTE,2			; LED 5
								; 1 -> ACESO
								; 0 -> APAGADO




; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *   VETOR DE RESET DO MICROCONTROLADOR      *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  POSIÇÃO INICIAL PARA EXECUÇÃO DO PROGRAMA

	ORG		0X0000				; ENDEREÇO DO VETOR DE RESET
	GOTO		CONFIG				; PULA PARA CONFIG DEVIDO A REGIÃO
							; DESTINADA AS ROTINAS SEGUINTES



; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                   VETOR DE TRATAMANTO DE INTERRUPÇÕES                   *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  POSIÇÃO INICIAL PARA TRATAMENTO DE INTERRUPÇÕES


	ORG 	0X0004

	MOVWF		W_TEMP		; GUARDA W ANTES DE TRATAR A INTERRUPÇÃO
	SWAPF	               STATUS,W		; TROCA OS NIBBLES DE STATUS (NÃO AFETA FLAGS)
	MOVWF		STATUS_TEMP		; GUARDA STATUS ANTES DE TRATAR INTERRUPÇÃO
	
	CLRF		STATUS	

	BTFSS		PIR1,TMR2IF		; FOI INTERRUPÇÃO DE TIMER 2 ?
	GOTO		ESCREVE_SERIAL	; NÃO, TESTA SE FOI INTERRUPÇÃO DA RECEPÇÃO SERIAL
	BCF			PIR1,TMR2IF		; SIM, LIMPA FLAG DA INTERRUPÇÃO DE TMR2
		
	BTFSS	STEPINPUT			; STEPINPUT ESTÁ ACIONADO ?
	GOTO	SETA				; NÃO, ACIONA
	GOTO	RESETA			; SIM, DESACIONA
	
SETA

	BSF	STEPINPUT			; ACIONA STEPINPUT
	GOTO	SAI_INT

RESETA

	BCF	STEPINPUT			; DESACIONA O STEPINPUT
	GOTO	SAI_INT				; SAI DA INTERRUPÇÃO

ESCREVE_SERIAL 				

	BTFSS		PIR1,RCIF		; FOI INTERRUPÇÃO DA RECEPÇÃO SERIAL?
	GOTO		SAI_INT			; NÃO, VOLTA DE ONDE PAROU NO PROGRAMA PRINCIPAL 
	BCF			PIR1,RCIF		; SIM, LIMPA FLAG DA INTERRUPÇÃO DA RECEPÇÃO SERIAL
	MOVF		FSRW,W		; VOLTA O VALOR DO PONTEIRO FSR 
	MOVWF		FSR					
	MOVF		RCREG,W		; MOVE O DADO RECEBIDO NO CANAL SERIAL PARA W
	ANDLW 		0x7F			; TIRA O 8º BIT DE PARIDADE
	MOVWF		TEMP_W		; MOVE O DADO PARA UM ARQUIVO TEMPORÁRIO
	CLRF		RCREG		; LIMPA O REGISTRADOR DO DADO RECEBIDO NO CANAL SERIAL
	MOVF		FSR,W			; MOVE O VALOR DO PONTEIRO PARA W
	XORLW		0X69				
	BTFSC		STATUS,Z	; PONTEIRO DA RAM APONTA PARA A POSIÇÃO DE MEMÓRIA 69h ?
	GOTO		SAIMUDA		; VOLTA AO PROGRAMA PRINCIPAL
	MOVF		FSR,W			; MOVE O VALOR DO PONTEIRO PARA W
	XORLW		0X73				
	BTFSC		STATUS,Z	; PONTEIRO DA RAM APONTA PARA A POSIÇÃO DE MEMÓRIA 73h ?
	GOTO		SAIMUDA		; VOLTA AO PROGRAMA PRINCIPAL
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X06
	BTFSC		STATUS,Z		; DADO RECEBIDO PELO CANAL SERIAL É 06h (ACK)?
	GOTO		SAI_INT			; VOLTA AO PROGRAMA PRINCIPAL
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X02
	BTFSC		STATUS,Z			; DADO RECEBIDO PELO CANAL SERIAL É 02h (STX)?
	GOTO		SAI_INT			; VOLTA AO PROGRAMA PRINCIPAL
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X4E
	BTFSC		STATUS,Z			; DADO RECEBIDO PELO CANAL SERIAL É 4Eh (N) ?
	GOTO		TRATAN			; VAI PARA ROTINA DE TRATAMENTO DO DADO 'N'
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X52
	BTFSC		STATUS,Z			; DADO RECEBIDO PELO CANAL SERIAL É 52h (R) ?
	GOTO		REVISION			; VAI PARA ROTINA REVISION (STATUS)
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X50
	BTFSC		STATUS,Z			; DADO RECEBIDO PELO CANAL SERIAL É 50h (P) ?
	GOTO		TRATAP			; VAI PARA ROTINA TRATAP
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X03
	BTFSC		STATUS,Z			; DADO RECEBIDO PELO CANAL SERIAL É 03h (ETX) ?
	GOTO		FINAL				; VAI PARA ROTINA FINAL
	BTFSC		FLAGS1,1			; TERMINOU RECEPÇÃO DA INFORMAÇÃO ?
	GOTO		SAI_INT			; VAI PARA O PROGRAMA PRINCIPAL
	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	MOVWF		INDF		; GUARDA DADO RECEBIDO PELO CANAL SERIAL NA POSIÇÃO DE
 					;MEMÓRIA DO PONTEIRO DA RAM
	INCF		FSR,F			; INCREMENTA O PONTEIRO DA RAM
	GOTO 		SAIBOI
	
SAIMUDA

	MOVF		TEMP_W,W		; MOVE O DADO RECEBIDO PELO CANAL SERIAL PARA W
	XORLW		0X03			
	BTFSS		STATUS,Z			; FINAL DA MENSAGEM ?
	GOTO		SAIBOI				; NÃO, VAI PARA ROTINA SAIBOI
	MOVLW		0X60				; SIM, MOVE PONTEIRO DA RAM PARA POSIÇÃO 60h
	MOVWF		FSR			; MOVE O VALOR DA POSIÇÃO DO PONTEIRO DA RAM PARA O
							; ARQUIVO TEMPORÁRIO  FSRW
	MOVWF		FSRW
	GOTO		FINAL				; VAI PARA ROTINA FINAL
	
SAIBOI

	MOVF		FSR,W			; MOVE O VALOR DA POSIÇÃO DO PONTEIRO DA RAM PARA O 
								;ARQUIVO TEMPORÁRIO FSRW
	MOVWF		FSRW
	GOTO		SAI_INT


SAI_INT	

	BCF		FLAGS1,1			; LIMPA FLAG FINAL DA MENSAGEM

SAI 

	SWAPF		STATUS_TEMP,W	; RECONSTITUI VALORES DOS REGISTRADORES W E STATUS
   	MOVWF		STATUS
	SWAPF		W_TEMP,F
	SWAPF		W_TEMP,W
	
	RETFIE  

FINAL

	BSF		FLAGS1,1			; SETA FLAG FINAL DA MENSAGEM
	GOTO		SAI			; SAI PARA O PROGRAMA PRINCIPAL SEM LIMPAR O FLAG





REVISION
	
	MOVLW		0X7C	; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 7Ch 
	MOVWF		FSR
	GOTO		SAIBOI			; VAI PARA A ROTINA SAIBOI

TRATAN
	
	BTFSC		FLAGS,5	
	GOTO		TRATADADO
	BSF		FLAGS1,4
	GOTO		TRATADADO

TRATAP

	BTFSC		FLAGS2,0			; FOI RESPOSTA DA INICIALIZAÇÃO ?
	GOTO		TRATAINIC			
	BTFSC		FLAGS2,1			; NÃO, FOI RESPOSTA DA LEITURA ?
	GOTO		TRATADADO
	BTFSC		FLAGS2,2			; NÃO, FOI RESPOSTA DO LIMPA BUFFER ?
	GOTO		TRATALIMPA
	GOTO		SAIBOI				; VAI PARA A ROTINA SAIBOI
		 
TRATAINIC
	
	MOVLW		0X74		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 74h 
	MOVWF		FSR
	BCF		FLAGS2,0		; LIMPA FLAG DADO INICIALIZAÇÃO
	GOTO		SAIBOI			; VAI PARA A ROTINA SAIBOI

TRATALIMPA

	MOVLW		0X78		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 78h 
	MOVWF		FSR
	BCF		FLAGS2,2		; LIMPA FLAG DADO LIMPA 
	GOTO		SAIBOI			; VAI PARA A ROTINA SAIBOI

TRATADADO

	BTFSS		FLAGS,5	; É A PRIMEIRA VEZ?
	GOTO		FIRST		; SIM, VAI PARA FIRST
	MOVLW		0X60	; NÃO, POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 60h 
	MOVWF		FSR					
	BCF		FLAGS2,1	; LIMPA FLAG DADO RECEBIDO
	GOTO		SAIBOI		; VAI PARA A ROTINA SAIBOI	

FIRST
	
	BTFSC		FLAGS1,4
	GOTO		MAL
	BSF		FLAGS,5		; SETA FLAG PRIMEIRA VEZ 
MAL	BCF		FLAGS1,4
	MOVLW		0X6A	; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 6Ah
	MOVWF		FSR
	BCF		FLAGS2,1		; LIMPA FLAG DADO RECEBIDO
	GOTO		SAIBOI			; VAI PARA SAIBOI	
	


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *      ROTINA DE DELAY (DE 1MS ATÉ 256MS)            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA É UMA ROTINA DE DELAY VARIÁVEL, COM DURAÇÃO DE 1MS X O VALOR PASSADO
;  EM WORK (W).            

DELAY_MS

                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	MOVWF		TEMPO1				; CARREGA TEMPO1 (UNIDADES DE MS)
	MOVLW		.5
	MOVWF		TEMPO2
	MOVLW		.125
	MOVWF		TEMPO0				; CARREGA TEMPO0 (P/ CONTAR 1MS)
	CLRWDT						; LIMPA WDT (PERDE TEMPO) Perde 1us
	DECFSZ	TEMPO0,F				; FIM DE TEMPO0 ? Esta e a proxima perde 3 us
	GOTO		$-2					; NÃO - VOLTA 2 INSTRUÇÕES 
								; SIM - PASSOU-SE 1MS
	DECFSZ	TEMPO2,F
	GOTO		$-6
	
	DECFSZ	TEMPO1,F				; FIM DE TEMPO1 ?
	GOTO		$-8					; NÃO - VOLTA 8 INSTRUÇÕES
								; SIM
	RETURN						; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; * ROTINA DE ESCRITA DE UM CARACTER NO DISPLAY               *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA ENVIA UM CARACTER PARA O MÓDULO DE LCD. O CARACTER A SER
;  ESCRITO DEVE SER COLOCADO EM WORK (W) ANTES DE CHAMAR A ROTINA.

ESCREVE
	MOVWF		DISPLAY				; ATUALIZA DISPLAY (PORTD)
	NOP							; PERDE 0,4 US PARA ESTABILIZAÇÃO
	BSF		ENABLE				; ENVIA UM PULSO DE ENABLE AO DISPLAY
	GOTO		$+1
	BCF		ENABLE					

	MOVLW		.1
	CALL		DELAY_MS				; DELAY DE 1MS
	RETURN						; RETORNA

APAGA_LINHA1
	BCF		RS					; SELECIONA O DISPLAY P/ COMANDO
	MOVLW		0X80					; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE				; LINHA 0 / COLUNA 0
	BSF		RS					; SELECIONA O DISPLAY P/ DADOS
	MOVLW		' '	
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	RETURN

APAGA_LINHA2

	BCF		RS				; SELECIONA O DISPLAY P/ COMANDO
	MOVLW		0XC0				; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			; LINHA 1 / COLUNA 0
	BSF		RS				; SELECIONA O DISPLAY P/ DADOS
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	RETURN
 
LCD_CONV			
	
	swapf	NUMH,W
	andlw	0x0F
	addlw   0xF0
	movwf   THOU
	addwf   THOU,f
	addlw   0xE2
	movwf   HOUN
	addlw   0x32
	movwf   ONES

	movf    NUMH,W
	andlw   0x0F

	addwf   HOUN,f
	addwf   HOUN,f
	addwf   ONES,f
	addlw   0xE9
	movwf   TENS
	addwf   TENS,f
	addwf   TENS,f
   	 swapf   NUML,W
	andlw   0x0F
	addwf   TENS,f
	addwf   ONES,f

	rlf     TENS,f
	rlf     ONES,f
	comf    ONES,f
	rlf     ONES,f
	movf    NUML,W
	andlw   0x0F
	addwf   ONES,f
	rlf     THOU,f
	movlw   0x07
	movwf   TENK
				; At this point, the original number is
				; equal to
				; TenK*10000+Thou*1000+Hund*100+Tens*10+Ones 
				; if those entities are regarded as two's
				; compliment ; binary.  To be precise, all of
				; them are negative ; except TenK.  Now the
				; number needs to be normal- ; ized, but this
				; can all be done with simple byte ; arithmetic.
	movlw	0x0A
Lb1:
	addwf	ONES,f
	decf	TENS,f
	btfss	3,0
	goto	Lb1
Lb2:
	addwf	TENS,f
	decf	HOUN,f
	btfss	3,0
	goto	Lb2
Lb3:
	addwf	HOUN,f
	decf	THOU,f
	btfss	3,0
	goto	Lb3
Lb4:
	addwf	THOU,f
	decf	TENK,f
	btfss	3,0
	goto	Lb4

	RETURN

CHEIO

	BANK1					; MUDA PARA BANCO 1
	BTFSC		TXSTA,TRMT		; VIA DE TRANSMISSÃO OCUPADA?
	GOTO		VAI			; NÃO, MANDA DADO PELA SERIAL
	GOTO		CHEIO			; SIM, VOLTA PARA CHEIO

VAI
	
	BANK0					; MUDA PARA BANCO 0
	RETURN					

INIC_LEITORA					; ROTINA DE INICIALIZAÇÃO DA LEITORA

	BCF		RESET			; ESTABELECE COMUNICAÇÃO DO PIC COM A LEITORA

	MOVLW 	.80			; CARREGA W COM 80h
	CALL		DELAY_MS		; CHAMA ROTINA DE DELAY

	MOVLW		0X82			; ENVIA PARA A LEITORA O DADO (02 43 30 30 32 03 72)
	MOVWF		TXREG			; COMANDO DE INICIALIZAÇÃO DA LEITORA
	CALL		CHEIO				

	MOVLW		0XC3
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0X30
	MOVWF		TXREG
	CALL		CHEIO

	MOVLW		0X30
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0XB2
	MOVWF		TXREG
	CALL		CHEIO

	MOVLW		0X03
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0X72
	MOVWF		TXREG
	CALL		CHEIO

	BSF		FLAGS2,0		 ; SETA FLAG DE INICIALIZAÇÃO DA LEITORA
	 
	RETURN

LE_BUFFER_LEITORA

	BCF	INTCON,GIE			; DESABILITA TODAS AS INTERRUPÇõES				

	MOVLW		0X82			; ENVIA PARA A LEITORA O DADO (02 43 32 32 03 40)	
	MOVWF		TXREG			; COMNADO DE LEITURA DO BUFFER DA LEITORA
	CALL		CHEIO

	MOVLW		0XC3
	MOVWF		TXREG
	CALL		CHEIO
	
	MOVLW		0XB2
	MOVWF		TXREG
	CALL		CHEIO

	MOVLW		0XB2
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0X03
	MOVWF		TXREG
	CALL		CHEIO	
	
	MOVLW		0XC0
	MOVWF		TXREG
	CALL		CHEIO

	BSF		INTCON,GIE		; HABILITA TODAS AS INTERRUPÇÕES

	BSF		FLAGS2,1		; SETA FLAG LEITURA ACIONADA 
	
	RETURN




LIMPA_BUFFER_LEITORA

	BCF		INTCON,GIE		; DESABILITA TODAS AS INTERRUPÇÕES

	MOVLW		0X82			; ENVIA PARA A LEITORA O DADO (02 43 32 36 03 44)
	MOVWF		TXREG			; COMANDO DE LIMPEZA DO BUFFER DA LEITORA
	CALL		CHEIO

	MOVLW		0XC3
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0XB2
	MOVWF		TXREG
	CALL		CHEIO

	MOVLW		0X36
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0X03
	MOVWF		TXREG
	CALL		CHEIO	

	MOVLW		0X44
	MOVWF		TXREG
	CALL		CHEIO

	BSF		INTCON,GIE	 		; HABILITA TODAS AS INTERRUPÇÕES	

	BSF		FLAGS2,2	 		; FLAG LIMPA BUFFER ACIONADO
	
	RETURN

COMPARA


	MOVLW		0X6D	; SIM, POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 6Dh
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 6Dh PARA W 
	BTFSC		STATUS,Z
	BSF			FLAGS,6	 
	MOVWF		COMP_TEMP		; GUARDA O CONTEÚDO EM UM REGISTRADOR TEMPORÁRIO
	MOVLW		0X63		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 63h  
	MOVWF		FSR						
	MOVF		INDF,W			; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 63h PARA W 	
	XORWF		COMP_TEMP,W		; COMPARA O ENDEREÇO DE DADO RECEBIDO 
								;COM O DO DADO GUARDADO
	BTFSS		STATUS,Z		; É IGUAL?
	BSF			FLAGS3,5		; NÃO, SETA FLAG DADO RECEBIDO ERRADO	
	MOVLW		0X6E	; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 6Eh 	
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 6Eh PARA W 
	MOVWF		COMP_TEMP		; GUARDA O CONTEÚDO EM UM REGISTRADOR TEMPORÁRIO
	MOVLW		0X64		;POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 64h  
	MOVWF		FSR						
	MOVF		INDF,W			; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 64h PARA W 	
	XORWF		COMP_TEMP,W		; COMPARA O ENDEREÇO DE DADO RECEBIDO 
								;COM O DO DADO GUARDADO
	BTFSS		STATUS,Z		; É IGUAL?
	BSF			FLAGS3,5		; NÃO, SETA FLAG DADO RECEBIDO ERRADO
	NOP
	MOVLW		0X6F	; SIM, POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 6Fh 
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 6Fh PARA W 	
	MOVWF		COMP_TEMP		; GUARDA O CONTEÚDO EM UM REGISTRADOR TEMPORÁRIO
	MOVLW		0X65		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 65h
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 65h PARA W 
	XORWF		COMP_TEMP,W		; COMPARA O ENDEREÇO DE DADO RECEBIDO 
								;COM O DO DADO GUARDADO
	BTFSS		STATUS,Z		; É IGUAL?
	BSF		FLAGS3,5		; NÃO, SETA FLAG DADO RECEBIDO ERRADO
	MOVLW		0X70	; SIM, POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 70h
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 70h PARA W 
	MOVWF		COMP_TEMP		; GUARDA O CONTEÚDO EM UM REGISTRADOR TEMPORÁRIO
	MOVLW		0X66		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 66h
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 66h PARA W 
	XORWF		COMP_TEMP,W		; COMPARA O ENDEREÇO DE DADO RECEBIDO 
								;COM O DO DADO GUARDADO
	BTFSS		STATUS,Z		; É IGUAL?
	BSF		FLAGS3,5		; NÃO, SETA FLAG DADO RECEBIDO ERRADO
	MOVLW		0X71	; SIM, POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 71h
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 71h PARA W 
	MOVWF		COMP_TEMP		; GUARDA O CONTEÚDO EM UM REGISTRADOR TEMPORÁRIO
	MOVLW		0X67		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 67h
	MOVWF		FSR
	MOVF		INDF,W 		; MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 67h PARA W 
	XORWF		COMP_TEMP,W		; COMPARA O ENDEREÇO DE DADO RECEBIDO 
								;COM O DO DADO GUARDADO
	BTFSS		STATUS,Z		; É IGUAL?
	BSF			FLAGS3,5		; NÃO, SETA FLAG DADO RECEBIDO ERRADO
	BTFSC		FLAGS3,5		; SIM, ALGUM FOI RECEBIDO ERRADAMENTE?
	GOTO		ERRADO		; SIM, VAI PARA A ROTINA ERRADO
	MOVLW		0X60
	MOVWF		FSR
	
R0M

	CLRF		INDF			; LIMPA A POSIÇÃO
	INCF		FSR,F			; INCREMENTA O PONTEIRO P/ A PRÓX. POS.
	MOVF		FSR,W
	XORLW		0X69			; COMPARA O PONTEIRO COM A ÚLT. POS. +1
	BTFSS		STATUS,Z		; JÁ LIMPOU TODAS AS POSIÇÕES?
	GOTO		R0M			; NÃO - LIMPA A PRÓXIMA POSIÇÃO		
	

								; CONTADOR DE INSERÇÕES CORRETAS
 
	INCF		UNIDADE,F		; INCREMENTA O REGISTRADOR UNIDADE
	MOVF		UNIDADE,W		; MOVE O CONTEÚDO DO REGISTRADOR UNIDADE PARA W
	XORLW		.10					
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?			
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		UNIDADE		; SIM, LIMPA REGISTRADOR UNIDADE
	INCF		DEZENA,F		; INCREMENTA REGISTRADOR DEZENA
	MOVF		DEZENA,W		; MOVE O CONTEÚDO DO REGISTRADOR DEZENA PARA W
	XORLW		.10	
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; VAI PARA O LABEL FOI
	CLRF		DEZENA		; SIM, LIMPA REGISTRADOR DEZENA
	INCF		CENTENA,F		; INCREMENTA O REGISTRADOR CENTENA	
	MOVF		CENTENA,W		; MOVE O CONTEÚDO DO REGISTRADOR CENTENA PARA W
	XORLW		.10
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		CENTENA		; SIM, LIMPA REGISTRADOR CENTENA
	INCF		MILHAR,F		; INCREMENTA O REGISTRADOR MILHAR
	MOVF		MILHAR,W		; MOVE O CONTEÚDO DO REGISTRADOR MILHAR PARA W
	XORLW		.10
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		MILHAR		; SIM, LIMPA REGISTRADOR MILHAR
	INCF		DEZEMIL,F		; INCREMENTA O REGISTRADOR DEZEMIL
	MOVF		DEZEMIL,W		; MOVE O CONTEÚDO DO REGISTRADOR DEZEMIL PARA W
	XORLW		.10
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		DEZEMIL		; SIM, LIMPA REGISTRADOR DEZEMIL
	INCF		CENTMIL,F		; INCREMENTA O REGISTRADOR CENTMIL
	MOVF		CENTMIL,W		; MOVE O CONTEÚDO DO REGISTRADOR CENTMIL PARA W
	XORLW		.10
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		CENTMIL		; SIM, LIMPA REGISTRADOR CENTMIL
	INCF		MILHAO,F		; INCREMENTA O REGISTRADOR MILHAO
	MOVF		MILHAO,W		; MOVE O CONTEÚDO DO REGISTRADOR MILHAO PARA W
	XORLW		.10
	BTFSS		STATUS,Z		; O CONTEÚDO É IGUAL A 10?
	GOTO		FOI			; NÃO, VAI PARA O LABEL FOI
	CLRF		MILHAO		; SIM, LIMPA REGISTRADOR MILHAO
FOI
	CLRF		ERRADAS		; LIMPA O REGISTRADOR ERRADAS
	RETURN

ERRADO

	INCF		ERRADAS,F		; INCREMENTA O REGISTRADOR ERRADAS
	MOVF		ERRADAS,W		; MOVE O CONTEÚDO DO REGISTRADOR ERRADAS PARA W
	XORLW		.10	
	BTFSC		STATUS,Z		; O CONTEÚDO É IGUAL À 10?
	GOTO		AG			; VAI PARA ROTINA AG
	BCF		FLAGS3,5		; RESETA FLAG DADO RECEBIDO ERRADAMENTE
	RETURN	

AG

	BSF		FLAGS3,4		; SIM, SETA FLAG 10 ERROS CONSECUTIVOS	
	BCF		FLAGS,5		; RESETA FLAG LEITURA PELA PRIMEIRA VEZ
	BCF		FLAGS3,5		; RESETA FLAG DADO RECEBIDO ERADAMENTE
	MOVF		UNIDADE,W  		;MOVE O CONTEÚDO DO REGISTRADOR 
								;UNIDADE PARA O REGISTRADOR
								; GUARDA_TEMP
	MOVWF		GUARDA_TEMP	
	INCF		PAL,F			; INCREMENTA REGISTRADOR PAL	
	MOVF		PAL,W			; MOVE O CONTEÚDO REGISTRADOR PAL PARA W
	XORLW		0X02		
	BTFSC		STATUS,Z		; DEU PAL PELA SEGUNDA VEZ
	BSF		FLAGS,6		; SETA FLAG LEITORA DANIFICADA
	RETURN
	

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *   CONFIGURAÇÕES INICIAIS DE HARDWARE E SOFTWARE            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  NESTA ROTINA SÃO INICIALIZADAS AS PORTAS DE I/O DO MICROCONTROLADOR E AS
;  CONFIGURAÇÕES DOS REGISTRADORES ESPECIAIS (SFR). A ROTINA INICIALIZA A
;  MÁQUINA E AGUARDA O ESTOURO DO WDT.



CONFIG
	CLRF		PORTA			; GARANTE TODAS AS SAÍDAS EM ZERO
	CLRF		PORTB
	CLRF		PORTC
	CLRF		PORTD
	CLRF		PORTE

	MOVLW  	B'01111111'
	MOVWF		T2CON

	BANK1					; SELECIONA BANCO 1 DA RAM

	
	MOVLW		.20	
	MOVWF		PR2

	MOVLW		B'0000000'
	MOVWF		TRISA			; CONFIGURA I/O DO PORTA

	MOVLW		B'00111111'
	MOVWF		TRISB			; CONFIGURA I/O DO PORTB

	MOVLW		B'10100000'
	MOVWF		TRISC			; CONFIGURA I/O DO PORTC

	MOVLW		B'00000000'
	MOVWF		TRISD			; CONFIGURA I/O DO PORTD

	MOVLW		B'00000000'
	MOVWF		TRISE			; CONFIGURA I/O DO PORTE

						
	MOVLW		B'11000000'
	MOVWF		INTCON		; CONFIGURA INTERRUPÇÕES
						; ABILITA TODAS AS INTERRUPÇÕES



	MOVLW   	B'00000111'
	MOVWF		ADCON1

	MOVLW		B'00100010'
	MOVWF		PIE1
	

	MOVLW		B'00100100'
	MOVWF		TXSTA			; CONFIGURA USART
							; HABILITA TX
							; MODO ASSINCRONO
							; TRANSMISSÃO DE 8 BITS
							; COM -- HIGH SPEED BAUD RATE

	MOVLW		.31
	MOVWF		SPBRG			; ACERTA BAUD RATE -> 19200bps

	BANK0					; SELECIONA BANCO 0 DA RAM

	MOVLW		B'10010000'
	MOVWF		RCSTA			; CONFIGURA USART
							; HABILITA RX
							; RECEPÇÃO DE 8 BITS
							; RECEPÇÃO CONTÍNUA
							; DESABILITA ADDRESS DETECT



	
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                         INICIALIZAÇÃO DA RAM                            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA IRÁ LIMPAR TODA A RAM DO BANCO 0, INDO DE 0X20 A 0X7F
INICIO

	MOVLW		0X20
	MOVWF		FSR			; APONTA O ENDEREÇAMENTO INDIRETO PARA
						; A PRIMEIRA POSIÇÃO DA RAM
LIMPA_RAM
	CLRF		INDF			; LIMPA A POSIÇÃO
	INCF		FSR,F			; INCREMENTA O PONTEIRO P/ A PRÓX. POS.
	MOVF		FSR,W
	XORLW		0X80			; COMPARA O PONTEIRO COM A ÚLT. POS. +1
	BTFSS		STATUS,Z		; JÁ LIMPOU TODAS AS POSIÇÕES?
	GOTO		LIMPA_RAM		; NÃO - LIMPA A PRÓXIMA POSIÇÃO
							; SIM

	MOVLW		0X7E	; APONTA O ENDEREÇAMENTO INDIRETO PARA A POSIÇÃO 7Eh DA RAM
	MOVWF		FSR
	MOVLW		0X30	; MOVE 0 PARA O REGISTRADOR APONTADO PELO ENDEREÇ. INDIRETO
	MOVWF		INDF
	MOVLW		0X74			; MOVE 74h PARA O REGISTRADOR FSR TEMPORÁRIO
	MOVWF		FSRW
	BSF		STEPENABLE		; DESABILITA O MOTOR DE PASSO	
	BSF		LED_5			; ACENDE LED STOP
	MOVLW		.1		; MOVE 1 PARA OS REGISTRADORES TEMPINS E TEMPREM
	MOVWF		TEMPINS			
	MOVWF		TEMPREM
	MOVLW		.0			; MOVE ZERO PARA OS REGISTRADORES ABAIXO
	MOVWF		UNIDADE
	MOVWF		DEZENA
	MOVWF		CENTENA
	MOVWF		MILHAR
	MOVWF		DEZEMIL
	MOVWF		CENTMIL
	MOVWF		MILHAO


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                     CONFIGURAÇÕES INICIAIS DO DISPLAY                   *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ESTA ROTINA INICIALIZA O DISPLAY P/ COMUNICAÇÃO DE 8 VIAS, DISPLAY PARA 2
; LINHAS, CURSOR APAGADO E DESLOCAMENTO DO CURSOR À DIREITA. 

INICIALIZACAO_DISPLAY
	BCF		RS				; SELECIONA O DISPLAY P/ COMANDOS

	MOVLW		0X30				; ESCREVE COMANDO 0X30 PARA
	CALL		ESCREVE			; INICIALIZAÇÃO

	MOVLW		.3
	CALL		DELAY_MS			; DELAY DE 3MS (EXIGIDO PELO DISPLAY)

	MOVLW		0X30				; ESCREVE COMANDO 0X30 PARA
	CALL		ESCREVE			; INICIALIZAÇÃO

	MOVLW		0X30				; ESCREVE COMANDO 0X30 PARA
	CALL		ESCREVE			; INICIALIZAÇÃO

	MOVLW		B'00111000'			; ESCREVE COMANDO PARA
	CALL		ESCREVE			; INTERFACE DE 8 VIAS DE DADOS

	MOVLW		B'00000001'			; ESCREVE COMANDO PARA
	CALL		ESCREVE			; LIMPAR TODO O DISPLAY

	MOVLW		.1
	CALL		DELAY_MS			; DELAY DE 1MS

	MOVLW		B'00001100'			; ESCREVE COMANDO PARA
	CALL		ESCREVE			; LIGAR O DISPLAY SEM CURSOR

	MOVLW		B'00000110'			; ESCREVE COMANDO PARA INCREM.
	CALL		ESCREVE			; AUTOMÁTICO À DIREITA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                 ROTINA DE ESCRITA DA TELA PRINCIPAL                     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


		
	BCF 		RS
	MOVLW		0X85					; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE				
	BSF		RS					; SELECIONA O DISPLAY P/ DADOS

	MOVLW		'U'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'F'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE

	BCF RS
	MOVLW		0XC1					; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE				
	BSF		RS					; SELECIONA O DISPLAY P/ DADOS
	MOVLW		'P'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'J'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'M'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
DENOVO

	CALL		INIC_LEITORA		; CHAMA ROTINA DE INICIALIZAÇÃO DA LEITORA

	MOVLW		.20			; CONTA 20ms
	CALL		DELAY_MS			

	MOVLW		0X74		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 74h 
	MOVWF		FSR
	MOVF		INDF,W			; MOVE CONTEÚDO DA POSICÃO DE MEMÓRIA 74h PARA W
	XORLW		0X30
	BTFSC		STATUS,Z		; O CONTEÚDO É 30h?
	GOTO		OK			; SIM, INICIALIZOU. VAI PARA ROTINA OK 
	CALL		SHOW_LCD12		; NÃO, NÃO INICIALIZOU. 
	GOTO		DENOVO		; TENTA NOVAMENTE. VAI PARA ROTINA DENOVO

OK

	CALL		SHOW_LCD11			; MOSTRA MENSAGEM LEITORA INICIALIZADA
	MOVLW		0X74		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 74h 
	MOVWF		FSR
	CLRF		INDF		; LIMPA O CONTEÚDO DA POSICÃO DE MEMÓRIA 74h

	
MAIN  					; ROTINA PRINCIPAL


INI
	MOVF		T_FILTRO,W			; MOVE CONSTANTE T_FILTRO PARA W
	MOVWF		FILTRO01			; MOVE W PARA OS REGISTRADORES FILTROS
	MOVWF		FILTRO02
	MOVWF		FILTRO11
	MOVWF		FILTRO12
	MOVWF		FILTRO21
	MOVWF		FILTRO22
	MOVWF		FILTRO31
	MOVWF		FILTRO32

	BTFSC		FLAGS3,4			; OCORREU 10 LEITURAS ERRADAS		
	GOTO		LIMPA				; SIM, VAI PARA ROTINA LIMPA
	GOTO		DEFEITO			; NÃO, VAI PARA ROTINA DEFEITO 


LIMPA

	MOVLW		0X60		; POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 60h 
	MOVWF		FSR
	

RAM

	CLRF		INDF				; LIMPA O CONTEÚDO DA POSIÇÃO
	INCF		FSR,F				; INCREMENTA O PONTEIRO P/ A PRÓX. POS.
	MOVF		FSR,W
	XORLW		0X74			; COMPARA O PONTEIRO COM A ÚLT. POS. +1
	BTFSS		STATUS,Z			; JÁ LIMPOU TODAS AS POSIÇÕES?
	GOTO		RAM				; NÃO - LIMPA A PRÓXIMA POSIÇÃO		
	GOTO		MENSAGENS			; VAI PARA A ROTINA MENSAGENS	

DEFEITO

	MOVF		UNIDADE,W
	XORWF		GUARDA_TEMP,W
	BTFSC		STATUS,Z
	GOTO		MENSAGENS
	MOVF		PAL,W
	XORLW		0X01
	BTFSC		STATUS,Z
	CLRF		PAL

MENSAGENS

	BTFSC		FLAGS,6				; LEITORA DANIFICADA?
	GOTO		SHOW_LCD13				; SIM, MOSTRA MENSAGEM DE ADVERTÊNCIA 
	BTFSC		FLAGS3,4		; NÃO, OCORREU ERRO DE 10 INSERÇÕES ERRADAS?
	GOTO		SHOW_LCD10				; SIM, MOSTRA MENSAGEM DE ALERTA
	BTFSC		FLAGS,7		; CARTÃO FOI INSERIDO SEM SISTEMA LIGADO?
	GOTO		SHOW_LCD8				; SIM, MOSTRA MENSAGEM DE ADVERTÊNCIA
	MOVF		TELAS,W				; MOVE O NÚMERO DA TELA ATUAL PARA W
	BTFSC		STATUS,Z				; É A TELA 0?
	GOTO		SHOW_LCD0				; SIM, MOSTRA TELA 0	
	MOVF		TELAS,W			; NÃO, MOVE O NÚMERO DA TELA ATUAL PARA W
	XORLW		0X01
	BTFSC		STATUS,Z				; É A TELA 1?
	GOTO		SHOW_LCD9				; SIM, MOSTRA TELA 2
	
									
TRATA_BT0						; ROTINA DE TRATAMENTO DO BOTÃO 0

	BTFSC		BT_0				;O BOTÃO 0 ESTÁ PRESSIONADO?
	GOTO		BT0_LIB			;NÃO, ENTÃO TRATA COMO LIBERADO
							;SIM

	DECFSZ	FILTRO01,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT0			;NÃO, CONTINUA ESPERANDO
							;SIM

	DECFSZ	FILTRO02,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT0				;NÃO, CONTINUA ESPERANDO
							;SIM

	BTFSS		ST_BT0				;BOTÃO JÁ ESTAVA PRESSIONADO?
	GOTO		MODOPROG			;NÃO, EXECUTA AÇÃO DO BOTÃO
	GOTO		TRATA_BT1			;SIM, CHECA BOTÃO 1




BT0_LIB
	BCF	ST_BT0					;MARCA BOTÃO 0 COMO LIBERADO


TRATA_BT1

	
	BTFSC		BT_1				;O BOTÃO 1 ESTÁ PRESSIONADO?
	GOTO		BT1_LIB			;NÃO, ENTÃO TRATA COMO LIBERADO
							;SIM

	DECFSZ	FILTRO11,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT1			;NÃO, CONTINUA ESPERANDO
							;SIM

	DECFSZ	FILTRO12,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT1			;NÃO, CONTINUA ESPERANDO
							;SIM

	BTFSS		ST_BT1				;BOTÃO JÁ ESTAVA PRESSIONADO?
	GOTO		GIROMSG			;NÃO, EXECUTA AÇÃO DO BOTÃO
	GOTO		TRATA_BT2			;SIM, CHECA BOTÃO 2

BT1_LIB
	BCF	ST_BT1					;MARCA BOTÃO 1 COMO LIBERADO
	BCF	LED_1					;APAGA LED_1

TRATA_BT2

	
	BTFSC		BT_2				;O BOTÃO 2 ESTÁ PRESSIONADO?
	GOTO		BT2_LIB			;NÃO, ENTÃO TRATA COMO LIBERADO
							;SIM

	DECFSZ	FILTRO21,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT2			;NÃO, CONTINUA ESPERANDO
							;SIM

	DECFSZ	FILTRO22,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT2			;NÃO, CONTINUA ESPERANDO
							;SIM

	BTFSS		ST_BT2				;BOTÃO JÁ ESTAVA PRESSIONADO?
	GOTO		INC				;NÃO, EXECUTA AÇÃO DO BOTÃO
	GOTO		TRATA_BT3			;SIM, CHECA BOTÃO 3

BT2_LIB
	BCF		ST_BT2				;MARCA BOTÃO 2 COMO LIBERADO
	BCF		LED_2				;APAGA LED_2

TRATA_BT3

	
	BTFSC		BT_3				;O BOTÃO 3 ESTÁ PRESSIONADO?
	GOTO		BT3_LIB			;NÃO, ENTÃO TRATA COMO LIBERADO
							;SIM

	DECFSZ	FILTRO31,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT3			;NÃO, CONTINUA ESPERANDO
							;SIM

	DECFSZ	FILTRO32,F			;DECREMENTA O FILTRO DO BOTÃO
							;TERMINOU?
	GOTO		TRATA_BT3			;NÃO, CONTINUA ESPERANDO
							;SIM

	BTFSS		ST_BT3		;BOTÃO JÁ ESTAVA PRESSIONADO?
	GOTO		DEC		;NÃO, EXECUTA AÇÃO DO BOTÃO
	GOTO		START		;SIM, CHECA BOTÃO START

BT3_LIB
	BCF		ST_BT3		;MARCA BOTÃO 3 COMO LIBERADO
	BCF		LED_3		;APAGA LED_3

START					;ROTINA DE TRATAMENTO DO BOTÃO START

	BTFSC		BT_4		;BOTÃO START FOI PRESSIONADO?
	GOTO		STOP		;NÃO, VAI PARA ROTINA DE TRATAMENTO DO BOTÃO STOP
	BTFSC		FLAGS,6	;LEITORA ESTÁ DANIFICADA?
	GOTO		INICIO		;SIM, VAI PARA ROTINA DE INICIALIZAÇÃO DO MICROCONTROLADOR
	BCF			FLAGS3,4	;NÃO,  RESETA FLAG 10 LEITURAS ERRADAS CONSECUTIVAS
	MOVLW		0X7E		;POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 7Eh 
	MOVWF		FSR
	MOVF		INDF,W		              ;MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 7Eh
							; PARA W (POSIÇÃO DO CARTÃO)
	XORLW		0X30					;
	BTFSS		STATUS,Z			;CARTÃO ESTÁ FORA?
	GOTO		PROBLEMA			;VAI PARA A ROTINA PROBLEMA
	BTFSC		FLAGS,7			;CARTÃO ESTÁ INSERIDO ANTES DO START?
	CALL		LIMPA_BUFFER_LEITORA	;SIM,CHAMA ROTINA DE LIMPEZA DE BUFFER 	
	BCF		FLAGS,7			;LIMPA FLAG COMEÇO COM CARTÃO INSERIDO
	BCF		DIRECTION			;SENTIDO DE GIRO DO MOTOR DE PASSO
	BCF		STEPENABLE			;HABILITA MOTOR DE PASSO	
	BSF		LED_4				;FLAG START
	BCF		LED_5				;FLAG STOP
	GOTO		STOP				;VAI PARA ROTINA DE TRATAMENTO DO BOTÃO STOP

PROBLEMA

	BSF		FLAGS,7	;FLAG COMEÇO COM CARTÃO INSERIDO

STOP	
	
	BTFSC		BT_5		;BOTÃO STOP FOI PRESSIONADO?
	GOTO		MOTOR		;NÃO, VAI PARA A ROTINA MOTOR 
	
PER	MOVLW		0X7E		;SIM, POSICIONA O PONTEIRO DA RAM PARA 
							;A POSIÇÃO DE MEMÓRIA 7Eh 
	MOVWF		FSR						
	MOVF		INDF,W     	;MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 7Eh 
							;PARA W (POSIÇÃO DO CARTÃO)	
	XORLW		0X30					
	BTFSS		STATUS,Z			;CARTÃO ESTÁ FORA?
	GOTO		PER				;NÃO,VAI PARA O LABEL PER
	BSF			STEPENABLE			;DESABILITA MOTOR DE PASSO
	BCF			LED_4				;FLAG START
	BSF			LED_5				;FLAG STOP	
	MOVLW		.2
	CALL		DELAY_MS
	CALL		LIMPA_BUFFER_LEITORA	;SIM,VAI PARA ROINA DE LIMPEZA DO BUFFER 
	BTFSS		FLAGS3,4			;OCORREU 10 LEITURAS ERRADAS CONSECUTIVAS?
	GOTO		MOTOR				;VAI PARA A ROTINA MOTOR
	CLRF		ERRADAS			;LIMPA O REGISTRADOR ERRADAS
	
	GOTO 		MAIN				; VOLTA PARA A ROTINA MAIN



MOTOR
	
	
	BTFSC		FLAGS3,4	;OCORREU 10 LEITURAS ERRADAS CONSECUTIVAS? 
	GOTO		PER			;SIM, DESLIGA MOTOR	
	BTFSS		LED_4		;SISTEMA LIGADO? 
	GOTO		MAIN		;NÃO, VOLTA PARA A ROTINA MAIN
	MOVLW		0X7E		;POSICIONA O PONTEIRO DA RAM PARA A POSIÇÃO DE MEMÓRIA 7Eh
	MOVWF		FSR
	MOVF		INDF,W		;MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 7Eh 
							;PARA W (POSIÇÃO DO CARTÃO)
	XORLW		0X33
	BTFSC		STATUS,Z	;CARTÃO ESTÁ DENTRO?
	GOTO		REMOVE	;SIM, VAI PARA A ROTINA REMOVE
	MOVF		INDF,W                ;MOVE O CONTEÚDO DA POSIÇÃO DE MEMÓRIA 7Eh 
							;PARA W (POSIÇÃO DO CARTÃO)	
	XORLW		0X30
	BTFSS		STATUS,Z	;CARTÃO ESTÁ FORA?
	GOTO		MAIN		;NÃO, VAI PARA A ROTINA PRINCIPAL
	BTFSS		FLAGS3,7	;SIM, FLAG DE PROTEÇÃO SISTEMA LIGADO 
							;PELA PRIMEIRA VEZ ESTÁ SETADO?
	GOTO		MAIN			;NÃO, VOLTA PARA A ROTINA MAIN 
	
INSERE	

	BSF			STEPENABLE			;DESABILITA MOTOR DE PASSO
	MOVLW		.2				;CONTA TEMPO DE 2ms 
	CALL		DELAY_MS
	CALL		LE_BUFFER_LEITORA		;VAI PARA A ROTINA DE LEITURA DO BUFFER
	MOVLW		.2				;CONTA TEMPO DE 2ms 
	CALL		DELAY_MS
	CALL		COMPARA			;COMPARA DADO RECEBIDO COM DADO GUARDADO
	CALL		LIMPA_BUFFER_LEITORA	;VAI PARA A ROTINA LIMPEZA DO BUFFER
	MOVLW		.2
	CALL		DELAY_MS
	

	BCF		FLAGS3,7			;RESETA FLAG SISTEMA LIGADO PELA PRIMEIRA VEZ
	BCF		DIRECTION			;SENTIDO DE GIRO DO MOTOR DE PASSO
	BCF		STEPENABLE			;HABILITA MOTOR DE PASSO
	GOTO		MAIN				;VAI PARA A ROTINA MAIN

	
REMOVE
	
	BSF			STEPENABLE				;DESABILITA MOTOR DE PASSO
	
	
	BSF		FLAGS3,7			;SETA FLAG SISTEMA LIGADO PELA PRIMEIRA VEZ
	BCF		STEPENABLE				;HABILITA MOTOR DE PASSO
	BSF		DIRECTION				;SENTIDO DE GIRO DO MOTOR DE PASSO
	GOTO		MAIN					;VAI PARA A ROTINA MAIN


;*******************************************************************************
;*	       	                  AÇÃO DOS BOTÕES DA IHM						   *		
;*******************************************************************************

;AÇÃO BOTÃO 0

MODOPROG
	
	BSF			ST_BT0			;SETA FLAG BOTÃO 0 PRESSIONADO
	BTFSC		LED_0			;ESTÁ EM MODO DE PROGRAMAÇÃO?	
	GOTO		APAGA			;SIM, VAI PARA ROTINA APAGA
	GOTO		ACENDE		;VAI, PARA ROTINA ACENDE
	
APAGA
	
	BCF			LED_0			;APAGA LED_0
	CLRF		TELAS			;LIMPA O REGISTRADOR TELAS
	GOTO		TRATA_BT1		;VAI PARA ROTINA TRATA BOTÃO 1	

ACENDE

	BSF		LED_0			;ACENDE LED_0
	MOVLW		0X01			;MOVE 1 PARA O REGISTRADOR TELAS
	MOVWF		TELAS
	GOTO		TRATA_BT1		;VAI PARA ROTINA TRATA BOTÃO 1

;AÇÃO BOTÃO 1

GIROMSG

	BSF			LED_1				;ACENDE LED 1
	BSF			ST_BT1
	BTFSS		LED_0				;ESTÁ EM MODO DE PROGRAMAÇÃO?
	GOTO		MAIN				;NÃO, VOLTA PARA ROTINA MAIN
	INCF		TELAS,F			;SIM, INCREMENTA O REGISTRADOR TELAS
	MOVF		TELAS,W			;MOVE O VALOR DO REGISTRADOR TELAS PARA W
	XORLW		0X02					
	BTFSC		STATUS,Z			;CONTEÚDO DO REGISTRADOR TELAS É IGUAL A 3?
	GOTO		PRIM				;SIM, VAI PARA A ROTINA PRIM
	GOTO		MAIN				;NÃO, VOLTA PARA A ROTINA MAIN
	
PRIM

	MOVLW		0X01				;MOVE 1 PARA O REGISTRADOR TELAS	
	MOVWF		TELAS
	GOTO		MAIN				;VOLTA PARA A ROTINA MAIN

;AÇÃO BOTÃO 2

INC

	BSF			LED_2				;ACENDE LED 2
	MOVF		TELAS,W		;MOVE O CONTEÚDO DO REGISTRADOR TELAS PARA W
	BTFSC		STATUS,Z			;O CONTEÚDO É ZERO?
	GOTO		INCPASSO			;SIM, VAI PARA A ROTINA INCPASSO
	
	GOTO		MAIN				;NÃO, VOLTA PARA A ROTINA MAIN
	
INCPASSO 	

	BTFSC		LED_4				;O SISTEMA ESTÁ LIGADO?
	GOTO		MAIN				;SIM, VOLTA PARA A ROTINA MAIN
A	BCF		DIRECTION			;NÃO, SENTIDO DE GIRO DO MOTOR DE PASSO
	BCF		STEPENABLE			;HABILITA MOTOR DE PASSO
	BTFSS		BT_2				;BOTÃO 2 ESTÁ PRESSIONADO
	GOTO		A				;SIM, VAI PARA LABEL A
	BSF		STEPENABLE			;NÃO, DESABILITA MOTOR DE PASSO
	GOTO		MAIN					;VOLTA PARA A ROTINA MAIN


;AÇÃO BOTÃO 3

DEC

	BSF		LED_3				;ACENDE LED 3
	MOVF		TELAS,W		;MOVE O CONTEÚDO DO REGISTRADOR TELAS PARA W 
	BTFSC		STATUS,Z			;O CONTEÚDO DO REGISTRADOR É ZERO?	
	GOTO		DECPASSO			;SIM, VAI PARA ROTINA DECPASSO
	
	GOTO		MAIN				;VAI PARA A ROTINA MAIN


DECPASSO 	

	BTFSC		LED_4				;SISTEMA ESTÁ LIGADO?
	GOTO		MAIN				;SIM, VOLTA PARA A ROTINA MAIN
AI	BSF		DIRECTION			;SENTIDO DE GIRO DO MOTOR DE PASSO
	BCF		STEPENABLE			;HABILITA MOTOR DE PASSO
	BTFSS		BT_3				;BOTÃO 3 ESTÁ PRESSIONADO?
	GOTO		AI				;SIM, VAI PARA O LABEL AI
	BSF		STEPENABLE			;NÃO, DESABILITA O MOTOR DE PASSO
	GOTO		MAIN				;VOLTA PARA A ROTINA MAIN





;************************************************************************
;* 	       MENSAGENS	 			*
;************************************************************************


SHOW_LCD0

	
	BCF		 RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	

	BCF 		RS
	MOVLW		0XC0				; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS					; SELECIONA O DISPLAY P/ DADOS

	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE			
	MOVF		MILHAO,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		CENTMIL,W
	ADDLW		0X30	
	CALL		ESCREVE
	MOVF		DEZEMIL,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		MILHAR,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		CENTENA,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		DEZENA,W
	ADDLW		0X30
	CALL		ESCREVE	
	MOVF		UNIDADE,W
	ADDLW		0X30
	CALL		ESCREVE		
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
			
	GOTO		TRATA_BT0


SHOW_LCD2

	CLRF		NUMH
	MOVF		TEMPREM,W
	MOVWF		NUML
	CALL		LCD_CONV

	BCF		 RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE		; LINHA 0 / COLUNA 0
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

					; COMANDOS PARA ESCREVER AS
					; LETRAS DE ""
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'V'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'B'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'H'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE


	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE		
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'V'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE	
	MOVF		TENS,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		ONES,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVLW		' '
	
	GOTO		TRATA_BT0

SHOW_LCD8

	BCF 		RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

				

	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	


	BCF		 RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'M'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	
	
	MOVLW		.7
	CALL		DELAY_MS

	CALL		APAGA_LINHA1
	CALL		APAGA_LINHA2
	
	MOVLW		.7
	CALL		DELAY_MS

		
	GOTO		TRATA_BT0





SHOW_LCD9

	BCF 		RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS


	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'G'
	CALL		ESCREVE
	MOVLW		'U'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE

	
	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		' '
	CALL		ESCREVE		
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		0X6E
	MOVWF		FSR
	MOVF		INDF,W
	CALL		ESCREVE
	INCF		FSR,F
	MOVF		INDF,W
	CALL		ESCREVE
	INCF		FSR,F
	MOVF		INDF,W
	CALL		ESCREVE
	INCF		FSR,F
	MOVF		INDF,W
	CALL		ESCREVE	
	INCF		FSR,F
	MOVF		INDF,W
	CALL		ESCREVE	
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
  	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '

	GOTO		TRATA_BT0

SHOW_LCD10


	BCF		 RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS



	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'Q'
	CALL		ESCREVE
	MOVLW		'U'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE	


	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		'P'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
		
	MOVLW		.7
	CALL		DELAY_MS

	CALL		APAGA_LINHA1
	CALL		APAGA_LINHA2
	
	MOVLW		.7
	CALL		DELAY_MS

	GOTO		TRATA_BT0



SHOW_LCD11


	BCF RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS


	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	

	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS
	
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'Z'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	
	MOVLW		.50
	CALL		DELAY_MS

	RETURN

SHOW_LCD12


	BCF 		RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE			
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS


	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE


	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS					; SELECIONA O DISPLAY P/ DADOS


	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE	
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'Z'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	
	
	MOVLW		.10
	CALL		DELAY_MS

	RETURN

SHOW_LCD13
	
	BSF		STEPENABLE
	BCF		 RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'.'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE	
	MOVLW		'F'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'D'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	
	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE		
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVF		MILHAO,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		CENTMIL,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		DEZEMIL,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		MILHAR,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		CENTENA,W
	ADDLW		0X30
	CALL		ESCREVE
	MOVF		DEZENA,W
	ADDLW		0X30
	CALL		ESCREVE	
	MOVF		UNIDADE,W
	ADDLW		0X30
	CALL		ESCREVE	
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE	
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'C'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE	
	
	MOVLW		.40
	CALL		DELAY_MS

	BCF 		RS
	MOVLW		0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

				
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'Q'
	CALL		ESCREVE
	MOVLW		'U'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'L'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE

	BCF 		RS
	MOVLW		0XC0			; COMANDO PARA POSICIONAR O CURSOR
	CALL		ESCREVE
	BSF		RS			; SELECIONA O DISPLAY P/ DADOS

	MOVLW		'P'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'I'
	CALL		ESCREVE
	MOVLW		'O'
	CALL		ESCREVE
	MOVLW		'N'
	CALL		ESCREVE
	MOVLW		'E'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE
	MOVLW		'S'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		'A'
	CALL		ESCREVE
	MOVLW		'R'
	CALL		ESCREVE
	MOVLW		'T'
	CALL		ESCREVE
	MOVLW		' '
	CALL		ESCREVE		
	
	MOVLW 	  .20
	CALL		DELAY_MS

GOTO		TRATA_BT0	
	
  	END








